package me.benzplayz;

import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class MySQL
{
  private Connection connection;
  private String prefix;
  private String host;
  private Integer port;
  private String database;
  private String username;
  private String password;
  
  public MySQL(String host, Integer port, String database, String username, String password, String pluginname)
  {
    this.host = host;
    this.port = port;
    this.database = database;
    this.username = username;
    this.password = password;
    this.prefix = ("[" + pluginname + "] MySQL: ");
    createConnection();
  }
  
  public void createConnection()
  {
    try
    {
      Class.forName("com.mysql.jdbc.Driver");
      this.connection = DriverManager.getConnection("jdbc:mysql://" + this.host + ":" + this.port + "/" + this.database + "?user=" + this.username + "&password=" + this.password + "&autoReconnect=true");
      System.out.println(this.prefix + "Connected.");
    }
    catch (SQLException|ClassNotFoundException e)
    {
      System.out.println(this.prefix + e.getMessage());
    }
  }
  
  public String getPrefix()
  {
    return this.prefix;
  }
  
  public Connection getConnection()
  {
    return this.connection;
  }
  
  public Boolean isConnected()
  {
    if (this.connection != null) {
      return Boolean.valueOf(true);
    }
    return Boolean.valueOf(false);
  }
  
  public void create(String string)
  {
    try
    {
      Statement s = this.connection.createStatement();
      s.executeUpdate(string);
      s.close();
    }
    catch (SQLException e)
    {
      System.out.println(this.prefix + e.getMessage());
    }
  }
  
  public ResultSet get(String string)
  {
    ResultSet rs = null;
    try
    {
      rs = this.connection.createStatement().executeQuery(string);
    }
    catch (SQLException e)
    {
      System.out.println(this.prefix + e.getMessage());
    }
    return rs;
  }
}
